/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2012 Oracle and/or its affiliates. All rights reserved.
 *
 * Oracle and Java are registered trademarks of Oracle and/or its affiliates.
 * Other names may be trademarks of their respective owners.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 *
 * Contributor(s):
 *
 * Portions Copyrighted 2012 Sun Microsystems, Inc.
 */
/*
 * ViewPathPanel.java
 *
 * Created on 2011/09/21
 */
package org.cakephp.netbeans.ui;

import java.util.Collection;
import javax.swing.JTextField;
import org.openide.filesystems.FileObject;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.util.Utilities;

/**
 *
 * @author junichi11
 */
public class ViewPathPanel extends javax.swing.JPanel implements LookupListener{

	private Lookup.Result result = null;
	/** Creates new form ViewPathPanel */
	public ViewPathPanel() {
		initComponents();
		addLookupListener();
	}

	private void addLookupListener(){
		result = Utilities.actionsGlobalContext().lookupResult(FileObject.class);
		result.addLookupListener(this);
	}

	public JTextField getViewPathField(){
		return viewPathField;
	}
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewPathLabel = new javax.swing.JLabel();
        viewPathField = new javax.swing.JTextField();

        viewPathLabel.setText(org.openide.util.NbBundle.getMessage(ViewPathPanel.class, "ViewPathPanel.viewPathLabel.text")); // NOI18N

        viewPathField.setEditable(false);
        viewPathField.setText(org.openide.util.NbBundle.getMessage(ViewPathPanel.class, "ViewPathPanel.viewPathField.text")); // NOI18N
        viewPathField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPathFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewPathLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewPathField, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewPathLabel)
                    .addComponent(viewPathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

	private void viewPathFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPathFieldActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_viewPathFieldActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField viewPathField;
    private javax.swing.JLabel viewPathLabel;
    // End of variables declaration//GEN-END:variables

	public void resultChanged(LookupEvent lookupEvent) {
		Lookup.Result r = (Lookup.Result) lookupEvent.getSource();
		Collection c = r.allInstances();
		if(!c.isEmpty()){
			FileObject fo = (FileObject) c.iterator().next();
			viewPathField.setText(fo.getPath());
		}else{
			viewPathField.setText("");
		}
	}
}